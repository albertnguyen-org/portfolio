{"version":3,"sources":["assets/icons/ic_fb.svg","assets/icons/ic_linkedin.svg","assets/icons/ic_instagram.svg","assets/icons/ic_github.svg","assets/imgs/avt.jpg","containers/NotFound/index.tsx","utils/paths/index.tsx","components/HamburgerButton/index.tsx","components/SocialButton/index.tsx","components/SocialView/index.tsx","components/Header/index.tsx","components/ShortResume/index.tsx","containers/MenuOverlay/index.tsx","layouts/index.tsx","routes/App.Route.tsx","redux/app/reducer.app.redux.tsx","redux/constant.redux.tsx","redux/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StyledContainerResult","styled","div","NotFound","status","title","subTitle","extra","to","type","StyledContainerMenu","HamburgerButton","style","overflow","cursor","WebkitTapHighlightColor","height","width","color","this","props","zIndex","React","createElement","viewBox","onClick","Motion","x","spring","toggle","presets","wobbly","y","id","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","transform","x1","y1","x2","y2","opacity","Component","StyledButton","Button","StyledIcon","img","SocialButton","href","path","target","rel","src","iconSrc","Ic_FB","require","Ic_LINKED_IN","Ic_INSTAGRAM","Ic_GITHUB","StyledContainerSocialView","socialIconData","key","SocialView","map","i","StyledContainerHeader","Header","className","colorBugger","onClickMenuButton","bind","ImgAvt","SCContainerShortResume","StyledContainerAvatar","StyledImage","SCNickName","p","SCDesc","ShortResume","userData","name","desc","ListMenu","menu_data","item","MenuOverlay","display","SCRow","Row","SCContainerButton","SCButtonViewMore","button","AppLayout","handleClickMenuButton","setState","state","displayMenu","console","log","lblButtonViewMore","headerTitle","process","Helmet","charSet","toLowerCase","DataRoute","component","AppRoute","basename","exact","initialDefaultState","btnMenuToggle","AppReducer","states","action","rootStore","createStore","App","store","Boolean","window","location","hostname","match","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fae87e98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_fb.959e2052.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_linkedin.9c9759b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_instagram.da2d90df.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_github.9a988ea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/avt.6292520e.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Result, Button } from \"antd\";\r\nimport { PATH_ROOT } from \"../../utils/paths\";\r\nimport styled from 'styled-components'\r\n\r\nconst StyledContainerResult = styled.div`\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    position: absolute;\r\n    display: flex !important;\r\n    align-items: center;\r\n    justify-content: center\r\n`\r\n\r\nconst NotFound: React.FC = () => {\r\n    return (\r\n        <StyledContainerResult>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={\r\n                    <Link to={PATH_ROOT}>\r\n                        <Button type=\"primary\">Back Home</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n        </StyledContainerResult>\r\n    );\r\n}\r\n\r\nexport {\r\n    NotFound\r\n}","export const PATH_ROOT =\"/\";\r\nexport const PATH_BLOG_PAGE = \"/blog-page\";\r\nexport const PATH_SHOP_PAGE = \"/shop-page\";\r\nexport const PATH_DATE_PAGE =\"/date-page\";\r\n\r\n\r\n// Socials\r\nexport const LINK_FACEBOOK = \"https://www.facebook.com/tam.pi.33\";\r\nexport const LINK_LINKEDIN = \"https://www.linkedin.com/in/tam-nguyen-6a1576183/\";\r\nexport const LINK_INSTAGRAM = \"https://www.instagram.com/tam.pi.33/\";\r\nexport const LINK_GITHUB = \"https://github.com/mralbertnguyen/\";","import React from 'react';\r\nimport { Motion, spring, presets } from \"react-motion\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainerMenu = styled.div`\r\n    height : 50px;\r\n    width : 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display : flex;\r\n`\r\n\r\ninterface States {\r\n    x?: string,\r\n    y?: string\r\n}\r\n\r\ninterface Props {\r\n    toggle: boolean,\r\n    onClick: Function,\r\n    color : string\r\n}\r\n\r\nexport default class HamburgerButton extends React.Component<Props, States>{\r\n    render() {\r\n        const style = {\r\n            overflow: 'visible',\r\n            cursor: 'pointer',\r\n            WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\r\n            height: '30px',\r\n            width: '30px',\r\n            color: this.props.color,\r\n            zIndex:10\r\n        };\r\n        return (\r\n            <StyledContainerMenu>\r\n                {\r\n                    React.createElement(\"svg\", {\r\n                        viewBox: \"0 0 96 96\",\r\n                        height: \"1em\",\r\n                        onClick: this.props.onClick,\r\n                        style: style\r\n                    },\r\n\r\n                        React.createElement(Motion, {\r\n                            style: {\r\n                                x: spring(this.props.toggle ? 1 : 0, presets.wobbly),\r\n                                y: spring(this.props.toggle ? 0 : 1, presets.wobbly)\r\n                            }\r\n                        },\r\n\r\n\r\n                            ({ x, y }: any) =>\r\n                                React.createElement(\"g\", {\r\n                                    id: \"navicon\",\r\n                                    fill: \"none\",\r\n                                    stroke: \"currentColor\",\r\n                                    strokeWidth: \"14\",\r\n                                    strokeLinecap: \"round\",\r\n                                    strokeLinejoin: \"round\"\r\n                                },\r\n\r\n                                    React.createElement(\"line\", {\r\n                                        transform: `translate(${x * 12}, ${x * -7}) rotate(${x * 45}, 7, 26)`,\r\n                                        x1: \"7\", y1: \"26\", x2: \"89\", y2: \"26\"\r\n                                    }),\r\n\r\n                                    React.createElement(\"line\", {\r\n                                        transform: `translate(${x * 12}, ${x * 7}) rotate(${x * -45}, 7, 70)`,\r\n                                        x1: \"7\", y1: \"70\", x2: \"89\", y2: \"70\"\r\n                                    }),\r\n\r\n                                    React.createElement(\"line\", {\r\n                                        transform: `translate(${x * -96})`,\r\n                                        opacity: y,\r\n                                        x1: \"7\", y1: \"48\", x2: \"89\", y2: \"48\"\r\n                                    }))))\r\n                }\r\n            </StyledContainerMenu>\r\n\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\n\r\ninterface SocialProps {\r\n    iconSrc: string,\r\n    path: string\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n    height : 50px !important;\r\n    width : 50px !important;\r\n    padding : 0px !important;\r\n    background-color: transparent !important;\r\n    margin : 0px 5px 0px 5px !important;\r\n    border : 0px !important;\r\n`\r\n\r\nconst StyledIcon = styled.img`\r\n    height : 40px !important;\r\n    width : 40px !important;\r\n`\r\n\r\nconst SocialButton: React.FC<SocialProps> = (props) => {\r\n    return (\r\n        <a href={props.path} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <StyledButton>\r\n                <StyledIcon  src={props.iconSrc} />\r\n            </StyledButton>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SocialButton from '../SocialButton';\r\n\r\n// Path\r\nimport {LINK_LINKEDIN, LINK_FACEBOOK, LINK_GITHUB, LINK_INSTAGRAM} from '../../utils/paths';\r\n//Icons \r\nconst Ic_FB = require(\"../../assets/icons/ic_fb.svg\");\r\nconst Ic_LINKED_IN = require(\"../../assets/icons/ic_linkedin.svg\");\r\nconst Ic_INSTAGRAM = require(\"../../assets/icons/ic_instagram.svg\");\r\nconst Ic_GITHUB = require(\"../../assets/icons/ic_github.svg\");\r\n\r\nconst StyledContainerSocialView = styled.div`\r\n    width : auto;\r\n    height : 100%;\r\n    background-color : transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n`\r\nconst socialIconData = [\r\n    {\r\n        key : \"ic_fb\",\r\n        path: LINK_FACEBOOK,\r\n        iconSrc: Ic_FB,\r\n    },\r\n    {\r\n        key: \"ic_linkedin\",\r\n        path: LINK_LINKEDIN,\r\n        iconSrc: Ic_LINKED_IN,\r\n    },\r\n    {\r\n        key: \"ic_instagram\",\r\n        path: LINK_INSTAGRAM,\r\n        iconSrc: Ic_INSTAGRAM,\r\n    },\r\n    {\r\n        key: \"ic_github\",\r\n        path: LINK_GITHUB,\r\n        iconSrc: Ic_GITHUB,\r\n    }\r\n]\r\n\r\nexport default class SocialView extends React.Component {\r\n    render() {\r\n        return (\r\n            <StyledContainerSocialView>\r\n                {\r\n                    socialIconData.map(i => {\r\n                        return <SocialButton key={i.key} iconSrc={i.iconSrc} path={i.path} />\r\n                    })\r\n                }\r\n            </StyledContainerSocialView>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport HamburgerButton from '../HamburgerButton';\r\nimport SocialView from '../SocialView/';\r\n\r\nconst StyledContainerHeader = styled.div`\r\n    height : 10%;\r\n    width : 100%;\r\n    background-color : transparent;\r\n    align-items: center;\r\n    display: flex;\r\n    position: fixed;\r\n    padding : 0px 5%;\r\n    justify-content:space-between;\r\n    z-index: 3;\r\n\r\n`\r\ninterface Props {\r\n    toggle: boolean,\r\n    onClickMenuButton : Function,\r\n    colorBugger : string\r\n}\r\n\r\nexport default class Header extends React.Component<Props,{}>{\r\n    render() {\r\n        return (\r\n            <StyledContainerHeader className=\"container-header\">\r\n                <HamburgerButton color={this.props.colorBugger} toggle={this.props.toggle} onClick={this.props.onClickMenuButton.bind(this)} />\r\n                {\r\n                    (!this.props.toggle) ? <SocialView /> : null\r\n                }\r\n            </StyledContainerHeader>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport userData from '../../data/personal.json'\r\nconst ImgAvt = require(\"../../assets/imgs/avt.jpg\")\r\n\r\nconst SCContainerShortResume = styled.div`\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    flex-direction : column;\r\n`\r\n\r\nconst StyledContainerAvatar = styled.div`\r\n    height : 200px;\r\n    width : 200px;\r\n    background-color :transparent;\r\n    border-radius : 100px;\r\n`\r\nconst StyledImage = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    border-radius : 100px;\r\n`\r\n\r\nconst SCNickName = styled.p`\r\n    font-size : 4rem;\r\n    margin: 0px;\r\n    white-space: nowrap;\r\n    color: black;\r\n    font-weight : bold;\r\n`\r\nconst SCDesc = styled.p`\r\n    font-size : 1rem;\r\n    margin: 0px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    max-width: 60%;\r\n    overflow-wrap: break-word;\r\n    text-align:center;\r\n`\r\n\r\n\r\nexport default class ShortResume extends React.Component{\r\n    render(){\r\n        return(\r\n            <SCContainerShortResume>\r\n                <StyledContainerAvatar>\r\n                <StyledImage src={ImgAvt}/>\r\n                </StyledContainerAvatar>\r\n                <SCNickName>{userData.name}</SCNickName>\r\n                <SCDesc>{userData.desc}</SCDesc>\r\n            </SCContainerShortResume>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport menu_data from \"../../data/menu.json\";\r\nimport { MenuDataType } from \"../../utils/types/menu.type\";\r\nimport { Link } from \"react-router-dom\";\r\ninterface Props {\r\n  display: boolean;\r\n}\r\n\r\n\r\nfunction MenuItemList(item: MenuDataType) {\r\n  return (\r\n    <div key={item.id} className=\"container-menu-item-list\">\r\n      <Link to={item.path}>\r\n        <p className=\"txt-title\">{item.title}</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ListMenu() {\r\n  return (\r\n    <div className=\"container-list-menu\">\r\n      {menu_data.map(i => {\r\n        return MenuItemList(i);\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MenuOverlay(props: Props) {\r\n  return (\r\n    props.display ? <div className=\"container-menu-overlay\">\r\n       <ListMenu /> \r\n    </div> : null\r\n  );\r\n}\r\n\r\nexport default MenuOverlay;\r\n","import { Row } from 'antd';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport ShortResume from '../components/ShortResume';\r\nimport MenuOverlay from '../containers/MenuOverlay';\r\nimport \"./style.css\";\r\n\r\ninterface States {\r\n    displayMenu: boolean,\r\n    toggle: boolean,\r\n    colorBugger: string,\r\n    lblButtonViewMore: string,\r\n    headerTitle: string\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SCRow = styled(Row)`\r\n    position : absolute !important;\r\n    bottom : 0px;\r\n    height: 100% !important;\r\n    width: 100% ;\r\n    padding-top: 10%;\r\n`\r\n\r\nconst SCContainerButton = styled.div`\r\n    height : 100px;\r\n    width : 100%;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`\r\n\r\nconst SCButtonViewMore = styled.button`\r\n    background-color : black;\r\n    height: 40%;\r\n    width: 100px;\r\n    font-size: 12px;\r\n    display : flex;\r\n    justify-content: center;\r\n    border: none;\r\n    outline: transparent;\r\n    color: white;\r\n`\r\n\r\nexport default class AppLayout extends React.Component<Props, States> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            displayMenu: false,\r\n            toggle: false,\r\n            colorBugger: 'black',\r\n            lblButtonViewMore: 'view more',\r\n            headerTitle: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            headerTitle: process.env.REACT_APP_TITLE || \"Header TItle\"\r\n        });\r\n    }\r\n\r\n    handleClickMenuButton = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle,\r\n            displayMenu: !this.state.displayMenu,\r\n            colorBugger: !this.state.toggle ? 'white' : 'black'\r\n        });\r\n        console.log(`Toggle : ${this.state.toggle} \\n Display Menu : ${this.state.displayMenu}`)\r\n        console.log(\"Pressed button\");\r\n    }\r\n\r\n    render() {\r\n        const { headerTitle } = this.state;\r\n        return (\r\n            <div className=\"container-layout\">\r\n                <Helmet>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <title>{headerTitle}</title>\r\n                </Helmet>\r\n                <div className=\"container-blur-effect\" />\r\n                <Header colorBugger={this.state.colorBugger} toggle={this.state.toggle} onClickMenuButton={this.handleClickMenuButton} />\r\n                <MenuOverlay display={this.state.displayMenu} />\r\n                <SCRow>\r\n                    <ShortResume />\r\n                    <SCContainerButton>\r\n                        <SCButtonViewMore>\r\n                            <p>{this.state.lblButtonViewMore.toLowerCase()}</p>\r\n                        </SCButtonViewMore>\r\n                    </SCContainerButton>\r\n                </SCRow>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { PATH_ROOT, PATH_BLOG_PAGE, PATH_SHOP_PAGE, PATH_DATE_PAGE } from \"../utils/paths\"\r\nimport { NotFound } from \"../containers/NotFound\"\r\nimport AppLayout from '../layouts'\r\n\r\n// import DatePage from \"../containers/DatePage\"\r\nconst DataRoute = [\r\n    {\r\n        key : \"root\",\r\n        path: `${PATH_ROOT}`,\r\n        component:AppLayout\r\n    },\r\n    // { \r\n    //     key : \"blog-page\",\r\n    //     path: `${PATH_BLOG_PAGE}`,\r\n    //     component: BlogPage,\r\n    // },\r\n    // { \r\n    //     key : \"shop-page\",\r\n    //     path: `${PATH_SHOP_PAGE}`,\r\n    //     component: ShopPage,\r\n    // },\r\n    // { \r\n    //     key : \"date-page\",\r\n    //     path: `${PATH_DATE_PAGE}`,\r\n    //     component: DatePage,\r\n    // },\r\n]\r\n\r\nconst AppRoute = () => { \r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                {\r\n                    DataRoute.map(i => {\r\n                        return <Route exact key={i.key} path={i.path} component={i.component} />\r\n                    })\r\n                }\r\n                <Route exact component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRoute;","import { AppStateType, AppTypesOfState } from \"./type.app.redux\"\r\nimport { UPDATE_BTN_MENU_TOGGLE } from \"../constant.redux\"\r\n\r\nconst initialDefaultState: AppStateType = {\r\n    btnMenuToggle : false,\r\n}\r\n\r\n\r\nconst AppReducer = (\r\n    states = initialDefaultState,\r\n    action : AppTypesOfState\r\n) : AppStateType =>{\r\n    switch(action.type){\r\n        case UPDATE_BTN_MENU_TOGGLE : \r\n        states.btnMenuToggle = action.btnMenuToggle;\r\n        return {\r\n            ...states\r\n        }\r\n\r\n        default : return{\r\n            ...states\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppReducer;","export const UPDATE_BTN_MENU_TOGGLE = \"UPDATE_BTN_MENU_TOGGLE\";","import {createStore} from 'redux'\r\nimport AppReducer from './app/reducer.app.redux'\r\n\r\nconst rootStore = createStore(\r\n    AppReducer\r\n)\r\n\r\nexport default rootStore;","import React from 'react';\r\nimport AppRoute from \"./routes/App.Route\";\r\nimport {Provider} from \"react-redux\";\r\nimport rootStore from \"./redux\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={rootStore}>\r\n      <AppRoute/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}