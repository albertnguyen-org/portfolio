{"version":3,"sources":["assets/icons/ic_fb.svg","assets/icons/ic_linkedin.svg","assets/icons/ic_instagram.svg","assets/icons/ic_github.svg","assets/imgs/avt.jpg","containers/Result/index.tsx","utils/paths/index.tsx","components/CustomHelmet/index.tsx","components/Development/index.tsx","components/SocialButton/index.tsx","components/SocialView/index.tsx","components/Header/index.tsx","components/ShortResume/index.tsx","containers/MenuOverlay/index.tsx","layouts/index.tsx","components/CVView/index.tsx","routes/App.Route.tsx","redux/app/reducer.app.redux.tsx","redux/constant.redux.tsx","redux/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StyledContainerResult","styled","div","NotFound","status","title","subTitle","extra","to","type","CustomHelmet","state","headerTitle","process","charSet","this","Component","DevelopmentComponent","className","StyledButton","Button","StyledIcon","img","SocialButton","props","href","path","target","rel","src","iconSrc","socialIconData","key","require","StyledContainerSocialView","SocialView","map","i","React","Header","ImgAvt","SCContainerShortResume","StyledContainerAvatar","StyledImage","SCNickName","p","SCDesc","ShortResume","userData","name","desc","ListMenu","menu_data","item","id","MenuOverlay","display","AppLayout","handleClickMenuButton","setState","toggle","displayMenu","colorBugger","lblButtonViewMore","onClickMenuButton","Development","Container","CVView","DataRoute","component","AppRoute","basename","exact","initialDefaultState","btnMenuToggle","AppReducer","states","action","rootStore","createStore","App","store","Boolean","window","location","hostname","match","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dbb1d6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_fb.959e2052.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_linkedin.9c9759b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_instagram.da2d90df.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_github.9a988ea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/avt.6292520e.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Result, Button } from \"antd\";\r\nimport { PATH_ROOT } from \"../../utils/paths\";\r\nimport styled from 'styled-components'\r\n\r\nconst StyledContainerResult = styled.div`\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    position: absolute;\r\n    display: flex !important;\r\n    align-items: center;\r\n    justify-content: center\r\n`\r\n\r\nconst NotFound: React.FC = () => {\r\n    return (\r\n        <StyledContainerResult>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={\r\n                    <Link to={PATH_ROOT}>\r\n                        <Button type=\"primary\">Back Home</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n        </StyledContainerResult>\r\n    );\r\n}\r\n\r\nexport {\r\n    NotFound\r\n}","export const PATH_ROOT = \"/\";\r\nexport const CV_PAGE = \"/cv-page\";\r\n\r\n\r\n// Socials\r\nexport const LINK_FACEBOOK = \"https://www.facebook.com/tam.pi.33\";\r\nexport const LINK_LINKEDIN = \"https://www.linkedin.com/in/tam-nguyen-6a1576183/\";\r\nexport const LINK_INSTAGRAM = \"https://www.instagram.com/tam.pi.33/\";\r\nexport const LINK_GITHUB = \"https://github.com/sr-albert/\";","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nexport default class CustomHelmet extends Component {\n    state = {\n        headerTitle: process.env.REACT_APP_TITLE\n    }\n    render() {\n        return (\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.headerTitle}</title>\n            </Helmet>)\n    }\n}","import React from \"react\";\nimport \"./styles.scss\";\n\nconst DevelopmentComponent = () => {\n    return (\n        <div className=\"row wrapper\">\n            <p> development mode .... </p>\n        </div>\n    );\n}\n\nexport default DevelopmentComponent;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\n\r\ninterface SocialProps {\r\n    iconSrc: string,\r\n    path: string\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n    height : 50px !important;\r\n    width : 50px !important;\r\n    padding : 0px !important;\r\n    background-color: transparent !important;\r\n    margin : 0px 5px 0px 5px !important;\r\n    border : 0px !important;\r\n`\r\n\r\nconst StyledIcon = styled.img`\r\n    height : 40px !important;\r\n    width : 40px !important;\r\n`\r\n\r\nconst SocialButton: React.FC<SocialProps> = (props) => {\r\n    return (\r\n        <a href={props.path} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <StyledButton>\r\n                <StyledIcon  src={props.iconSrc} />\r\n            </StyledButton>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SocialButton from '../SocialButton';\r\n\r\n// Path\r\nimport {LINK_LINKEDIN, LINK_FACEBOOK, LINK_GITHUB, LINK_INSTAGRAM} from '../../utils/paths';\r\n//Icons \r\nconst Ic_FB = require(\"../../assets/icons/ic_fb.svg\");\r\nconst Ic_LINKED_IN = require(\"../../assets/icons/ic_linkedin.svg\");\r\nconst Ic_INSTAGRAM = require(\"../../assets/icons/ic_instagram.svg\");\r\nconst Ic_GITHUB = require(\"../../assets/icons/ic_github.svg\");\r\n\r\nconst socialIconData = [\r\n    {\r\n        key : \"ic_fb\",\r\n        path: LINK_FACEBOOK,\r\n        iconSrc: Ic_FB,\r\n    },\r\n    {\r\n        key: \"ic_linkedin\",\r\n        path: LINK_LINKEDIN,\r\n        iconSrc: Ic_LINKED_IN,\r\n    },\r\n    {\r\n        key: \"ic_instagram\",\r\n        path: LINK_INSTAGRAM,\r\n        iconSrc: Ic_INSTAGRAM,\r\n    },\r\n    {\r\n        key: \"ic_github\",\r\n        path: LINK_GITHUB,\r\n        iconSrc: Ic_GITHUB,\r\n    }\r\n]\r\n\r\nconst StyledContainerSocialView = styled.div`\r\n    width : auto;\r\n    height : 100%;\r\n    background-color : transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n`\r\nexport default class SocialView extends React.Component {\r\n    render() {\r\n        return (\r\n            <StyledContainerSocialView>\r\n                {\r\n                    socialIconData.map(i => {\r\n                        return <SocialButton key={i.key} iconSrc={i.iconSrc} path={i.path} />\r\n                    })\r\n                }\r\n            </StyledContainerSocialView>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n// import HamburgerButton from '../HamburgerButton';\r\nimport SocialView from '../SocialView/';\r\nimport \"./styles.scss\";\r\n\r\ninterface Props {\r\n    toggle: boolean,\r\n    onClickMenuButton: Function,\r\n    colorBugger: string\r\n}\r\n\r\nexport default class Header extends React.Component<Props, {}>{\r\n    render() {\r\n        return (\r\n            <div className=\"container-header\">\r\n                {/* <HamburgerButton color={this.props.colorBugger} toggle={this.props.toggle} onClick={this.props.onClickMenuButton.bind(this)} /> */}\r\n                <SocialView />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport userData from '../../data/personal.json'\r\nconst ImgAvt = require(\"../../assets/imgs/avt.jpg\")\r\n\r\nconst SCContainerShortResume = styled.div`\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    flex-direction : column;\r\n`\r\n\r\nconst StyledContainerAvatar = styled.div`\r\n    height : 200px;\r\n    width : 200px;\r\n    background-color :transparent;\r\n    border-radius : 100px;\r\n`\r\nconst StyledImage = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    border-radius : 100px;\r\n`\r\n\r\nconst SCNickName = styled.p`\r\n    font-size : 4rem;\r\n    margin: 0px;\r\n    white-space: nowrap;\r\n    color: black;\r\n    font-weight : bold;\r\n`\r\nconst SCDesc = styled.p`\r\n    font-size : 1rem;\r\n    margin: 0px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    max-width: 60%;\r\n    overflow-wrap: break-word;\r\n    text-align:center;\r\n`\r\n\r\n\r\nexport default class ShortResume extends React.Component{\r\n    render(){\r\n        return(\r\n            <SCContainerShortResume>\r\n                <StyledContainerAvatar>\r\n                <StyledImage src={ImgAvt}/>\r\n                </StyledContainerAvatar>\r\n                <SCNickName>{userData.name}</SCNickName>\r\n                <SCDesc>{userData.desc}</SCDesc>\r\n            </SCContainerShortResume>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport menu_data from \"../../data/menu.json\";\r\nimport { MenuDataType } from \"../../utils/types/menu.type\";\r\nimport { Link } from \"react-router-dom\";\r\ninterface Props {\r\n  display: boolean;\r\n}\r\n\r\nfunction MenuItemList(item: MenuDataType) {\r\n  return (\r\n    <div key={item.id} className=\"container-menu-item-list\">\r\n      <Link to={item.path}>\r\n        <p className=\"txt-title\">{item.title}</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ListMenu() {\r\n  return (\r\n    <div className=\"container-list-menu\">\r\n      {menu_data.map(i => {\r\n        return MenuItemList(i);\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MenuOverlay(props: Props) {\r\n  return (\r\n    props.display ? <div className=\"container-menu-overlay\">\r\n      <ListMenu />\r\n    </div> : null\r\n  );\r\n}\r\n\r\nexport default MenuOverlay;\r\n","import React from 'react';\r\nimport CustomHelmet from \"../components/CustomHelmet\"\r\nimport DevelopmentComponent from '../components/Development';\r\nimport Header from '../components/Header';\r\nimport ShortResume from '../components/ShortResume';\r\nimport MenuOverlay from '../containers/MenuOverlay';\r\nimport \"./style.scss\";\r\n\r\ninterface States {\r\n    displayMenu: boolean,\r\n    toggle: boolean,\r\n    colorBugger: string,\r\n    lblButtonViewMore: string\r\n}\r\n\r\nexport default class AppLayout extends React.Component<any, States> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            displayMenu: false,\r\n            toggle: false,\r\n            colorBugger: 'black',\r\n            lblButtonViewMore: 'view more'\r\n        }\r\n    }\r\n\r\n    handleClickMenuButton = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle,\r\n            displayMenu: !this.state.displayMenu,\r\n            colorBugger: !this.state.toggle ? 'white' : 'black'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-layout\">\r\n                <CustomHelmet />\r\n                {/* <div className=\"container-blur-effect\" /> */}\r\n                <Header colorBugger={this.state.colorBugger} toggle={this.state.toggle} onClickMenuButton={this.handleClickMenuButton} />\r\n                <MenuOverlay display={this.state.displayMenu} />\r\n\r\n                <div className='container-layout__content'>\r\n                    <ShortResume />\r\n                </div>\r\n                <div className='container-layout__footer'>\r\n                    <DevelopmentComponent />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Container = styled.div`\r\n  width : 100%;\r\n  height: 100%;\r\n  background-color: pink\r\n`\r\n\r\nclass CVView extends React.Component{\r\n      render() {\r\n        return (\r\n          <Container>\r\n            cv\r\n          </Container>\r\n        );\r\n      }\r\n      \r\n}\r\n\r\nexport default CVView;","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { PATH_ROOT, CV_PAGE } from \"../utils/paths\"\r\nimport { NotFound } from \"../containers/Result\"\r\nimport AppLayout from '../layouts'\r\n\r\nimport CVView from '../components/CVView'\r\nconst DataRoute = [\r\n    {\r\n        key: \"root\",\r\n        path: `${PATH_ROOT}`,\r\n        component: AppLayout\r\n    },\r\n    {\r\n        key: \"cv-page\",\r\n        path: `${CV_PAGE}`,\r\n        component: CVView,\r\n    },\r\n]\r\n\r\nconst AppRoute = () => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                {\r\n                    DataRoute.map(i => {\r\n                        return <Route exact key={i.key} path={i.path} component={i.component} />\r\n                    })\r\n                }\r\n                <Route exact component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRoute;","import { AppStateType, AppTypesOfState } from \"./type.app.redux\"\r\nimport { UPDATE_BTN_MENU_TOGGLE } from \"../constant.redux\"\r\n\r\nconst initialDefaultState: AppStateType = {\r\n    btnMenuToggle : false,\r\n}\r\n\r\n\r\nconst AppReducer = (\r\n    states = initialDefaultState,\r\n    action : AppTypesOfState\r\n) : AppStateType =>{\r\n    switch(action.type){\r\n        case UPDATE_BTN_MENU_TOGGLE : \r\n        states.btnMenuToggle = action.btnMenuToggle;\r\n        return {\r\n            ...states\r\n        }\r\n\r\n        default : return{\r\n            ...states\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppReducer;","export const UPDATE_BTN_MENU_TOGGLE = \"UPDATE_BTN_MENU_TOGGLE\";","import {createStore} from 'redux'\r\nimport AppReducer from './app/reducer.app.redux'\r\n\r\nconst rootStore = createStore(\r\n    AppReducer\r\n)\r\n\r\nexport default rootStore;","import React from 'react';\r\nimport AppRoute from \"./routes/App.Route\";\r\nimport {Provider} from \"react-redux\";\r\nimport rootStore from \"./redux\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={rootStore}>\r\n      <AppRoute/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}